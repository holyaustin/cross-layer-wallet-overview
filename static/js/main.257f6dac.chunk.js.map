{"version":3,"sources":["types/index.ts","assets/icon192.png","services/balanceService.ts","services/PriceService.ts","services/localStorage.ts","components/web3/connectors.ts","components/web3/ConnectButton.tsx","components/Dashboard.tsx","components/web3/Web3ConnectionManager.tsx","components/web3/hooks.ts","components/web3/WrappedWeb3ReactProvider.tsx","App.tsx","services/reportWebVitals.ts","index.tsx"],"names":["WalletKey","ChainKey","CoinKey","Currencies","RpcUrls","ETH","process","BSC","POL","DAI","provider","ethers","providers","JsonRpcProvider","nativeTokenMapping","nativeChain","BNB","MATIC","availableTokens","Contract","erc20_abi","USDT","USDC","LINK","UNI","AAVE","getListOfSupportedTokens","Object","keys","getTokenBalance","coinKey","walletAdress","a","includes","console","error","balanceAcrossChains","hasOwnProperty","getBalance","nativeBalance","parseFloat","utils","formatEther","chains","entries","chain","contract","balanceOf","externalBalance","CoinGeckoIds","coinKeys","idString","coin","coingeckoURL","axios","get","result","warn","data","length","prices","log","isSupported","itemBackup","localStorage","getItem","removeItem","setItem","e","storeWallets","wallets","JSON","stringify","map","item","address","CHAINS","MAINNET","ROPSTEN","RINKEBY","KOVAN","POLYGON","MUMBAI","XDAI","RPC_URLS","injected","InjectedConnector","supportedChainIds","values","network","NetworkConnector","urls","fromEntries","i","defaultChainId","ConnectButton","activate","useWeb3React","style","display","onClick","UNLOCK_PREMIUM_LOCK_CONTRACT","GRAPH_CLIENT","ApolloClient","uri","cache","InMemoryCache","window","unlockProtocolConfig","locks","name","icon","callToAction","default","expired","pending","confirmed","noWallet","PAYWALL","Paywall","1","readOnlyProvider","locksmithUri","unlockAppUrl","4","100","ChainDetails","gasName","coins","key","img_url","showGasModal","gas","Modal","info","title","content","href","target","rel","renderGas","walletKey","coinName","find","wallet","amounts","amount_coin","tooltipEmpty","type","block","tooltip","className","Button","width","active","size","shape","color","count","offset","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","renderAmounts","height","amount_usd","renderSummary","summary","percentage_of_portfolio","buildDataRows","emptyWalletAmounts","portfolio","WALLET1","deepClone","WALLET2","WALLET3","WALLET4","buildDataRow","baseWidth","coinColumn","fixed","dataIndex","render","src","alt","portfolioColumn","addColumn","walletColumn","children","baseColumns","emptySummaryAmounts","emptySummaryWallet","emptySummary","obj","parse","Dashboard","LOCKED","UNLOCKED","useState","setData","columns","setColumns","setSummary","setWallets","setPrices","walletModalVisible","setWalletModalVisible","walletModalAddress","setWalletModalAddress","walletModalLoading","setWalletModalLoading","premiumUnlocked","setPremiumUnlocked","web3","calculatePortfolio","forEach","chainKey","clearWalletData","updateWalletAmounts","then","eth","bsc","pol","dai","updateAmounts","findUnusedWalletKey","Error","addWallet","loading","newWallets","showWalletModal","checkPremium","getModalAddressSuggestion","addedWallets","web3Account","account","indexOf","resolveEnsName","ethereum","resolveName","handleWalletModalAdd","endsWith","isAddress","handleWalletModalClose","useEffect","getLastUnlockPurchases","UNLOCK_DATA","gql","oneDayAgo","Date","now","toString","query","variables","unlockContract","olderThan","amountKeys","notification","open","message","description","ETHERSCAN_URL","placement","duration","lockStatus","addEventListener","state","detail","changed","buildWalletColumn","span","substr","SyncOutlined","triggerWalletUpdate","DeleteOutlined","filter","removeWallet","loadCheckoutModal","SmileTwoTone","FrownTwoTone","walletColumns","newSummary","reduce","chainName","storedWallets","walletsString","addresses","walletKeys","walletIndex","readWallets","getPricesForTokens","newData","inUsd","usd","summaryIndex","minHeight","dataSource","bordered","scroll","x","y","pagination","Summary","Row","Cell","index","visible","onOk","onCancel","footer","disabled","placeholder","prefix","WalletOutlined","value","onChange","event","Web3ConnectionManager","context","connector","triedEager","tried","setTried","isAuthorized","catch","useEagerConnect","suppress","on","handleConnect","handleChainChanged","chainId","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","getLibrary","library","Web3Provider","pollingInterval","WrappedWeb3ReactProvider","App","position","zIndex","padding","logo","theme","mode","defaultSelectedKeys","Item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.257f6dac.chunk.js","sourcesContent":["import { TableColumnType } from 'antd';\n\nexport interface Amounts {\n  amount_coin: number;\n  amount_usd: number;\n}\n\nexport interface WalletAmounts {\n  eth: Amounts;\n  pol: Amounts;\n  bsc: Amounts;\n  dai: Amounts;\n}\n\nexport interface Coin {\n  key: string;\n  name: string;\n  img_url: string;\n}\n\nexport enum WalletKey {\n  WALLET1 = 'wallet1',\n  WALLET2 = 'wallet2',\n  WALLET3 = 'wallet3',\n  WALLET4 = 'wallet4',\n}\n\nexport interface DataType {\n  key: React.Key;\n  coin: Coin;\n  portfolio: Amounts;\n\n  [WalletKey.WALLET1]: WalletAmounts;\n  [WalletKey.WALLET2]: WalletAmounts;\n  [WalletKey.WALLET3]: WalletAmounts;\n  [WalletKey.WALLET4]: WalletAmounts;\n}\n\nexport enum ChainKey {\n  ETH = 'eth',\n  POL = 'pol',\n  BSC = 'bsc',\n  DAI = 'dai',\n}\n\nexport interface ColomnType extends TableColumnType<DataType> {\n  children?: Array<ColomnType>;\n}\n\nexport interface Summary {\n  portfolio: {\n    amount_usd: number;\n    percentage_of_portfolio: number;\n  },\n  [WalletKey.WALLET1]: any;\n  [WalletKey.WALLET2]: any;\n  [WalletKey.WALLET3]: any;\n  [WalletKey.WALLET4]: any;\n}\nexport interface Wallet {\n  key: WalletKey;\n  name: string;\n  address: string;\n  chains: Array<ChainKey>;\n  loading: boolean;\n}\n\nexport enum CoinKey {\n  ETH = 'ETH',\n  MATIC = 'MATIC',\n  BNB = 'BNB',\n  DAI = 'DAI',\n  USDT = 'USDT',\n  USDC = 'USDC',\n  UNI = 'UNI',\n  LINK = 'LINK',\n  AAVE = 'AAVE'\n}\n\nexport enum Currencies {\n  USD = \"usd\",\n  EUR = \"eur\",\n}\n\ninterface NetworkConfig {\n  readOnlyProvider: string\n  locksmithUri: string\n  unlockAppUrl: string\n}\nexport interface NetworkConfigs {\n  [networkId: string]: NetworkConfig\n}\n","export default __webpack_public_path__ + \"static/media/icon192.8a2cafb6.png\";","import { ethers } from \"ethers\";\nimport { ChainKey, CoinKey } from '../types';\nimport erc20_abi from './ABI/ERC_20.json';\n\n// add usdt, usdc, Cake, Bunny and many more\n\nconst RpcUrls = {\n  [ChainKey.ETH]: process.env.REACT_APP_RPC_URL_MAINNET,\n  [ChainKey.BSC]: process.env.REACT_APP_RPC_URL_BSC,\n  [ChainKey.POL]: process.env.REACT_APP_RPC_URL_POLYGON_MAINNET,\n  [ChainKey.DAI]: process.env.REACT_APP_RPC_URL_XDAI,\n}\n\nconst provider = {\n  [ChainKey.ETH]: new ethers.providers.JsonRpcProvider(RpcUrls[ChainKey.ETH]),\n  [ChainKey.BSC]: new ethers.providers.JsonRpcProvider(RpcUrls[ChainKey.BSC]),\n  [ChainKey.POL]: new ethers.providers.JsonRpcProvider(RpcUrls[ChainKey.POL]),\n  [ChainKey.DAI]: new ethers.providers.JsonRpcProvider(RpcUrls[ChainKey.DAI]),\n}\n\nconst nativeTokenMapping: {[k: string]: {[k: string]: ChainKey}} = {\n  [CoinKey.ETH]: {\n    nativeChain: ChainKey.ETH,\n  },\n  [CoinKey.BNB]: {\n    nativeChain: ChainKey.BSC,\n  },\n  [CoinKey.MATIC]: {\n    nativeChain: ChainKey.POL,\n  },\n  [CoinKey.DAI]: {\n    nativeChain: ChainKey.DAI,\n  },\n}\n\n//logic: token -> provider for each chain\nconst availableTokens = {\n  [CoinKey.ETH]: {\n    [ChainKey.BSC]: new ethers.Contract('0x2170ed0880ac9a755fd29b2688956bd959f933f8', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.POL]: new ethers.Contract('0xfD8ee443ab7BE5b1522a1C020C097CFF1ddC1209', erc20_abi, provider[ChainKey.POL]),\n    [ChainKey.DAI]: new ethers.Contract('0xa5c7cb68cd81640D40c85b2e5Ec9E4Bb55Be0214', erc20_abi, provider[ChainKey.DAI]),\n  },\n  [CoinKey.BNB]: {\n    [ChainKey.ETH]: new ethers.Contract('0xB8c77482e45F1F44dE1745F52C74426C631bDD52', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.POL]: new ethers.Contract('0xA649325Aa7C5093d12D6F98EB4378deAe68CE23F', erc20_abi, provider[ChainKey.POL]),\n    [ChainKey.DAI]: new ethers.Contract('0xCa8d20f3e0144a72C6B5d576e9Bd3Fd8557E2B04', erc20_abi, provider[ChainKey.DAI]), \n  },\n  [CoinKey.MATIC]: {\n    [ChainKey.ETH]: new ethers.Contract('0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.BSC]: new ethers.Contract('0xa90cb47c72f2c7e4411e781772735d9317d08dd4', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.DAI]: new ethers.Contract('0x7122d7661c4564b7C6Cd4878B06766489a6028A2', erc20_abi, provider[ChainKey.DAI])\n  },\n  [CoinKey.DAI]: {\n    [ChainKey.ETH]: new ethers.Contract('0x6b175474e89094c44da98b954eedeac495271d0f', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.BSC]: new ethers.Contract('0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.POL]: new ethers.Contract('0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063', erc20_abi, provider[ChainKey.POL]),\n  },\n  [CoinKey.USDT]: {\n    [ChainKey.ETH]: new ethers.Contract('0xdac17f958d2ee523a2206206994597c13d831ec7', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.BSC]: new ethers.Contract('0x55d398326f99059ff775485246999027b3197955', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.POL]: new ethers.Contract('0xc2132D05D31c914a87C6611C10748AEb04B58e8F', erc20_abi, provider[ChainKey.POL]),\n    [ChainKey.DAI]: new ethers.Contract('0x4ECaBa5870353805a9F068101A40E0f32ed605C6', erc20_abi, provider[ChainKey.DAI])\n  },\n  [CoinKey.USDC]: {\n    [ChainKey.ETH]: new ethers.Contract('0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.BSC]: new ethers.Contract('0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.POL]: new ethers.Contract('0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174', erc20_abi, provider[ChainKey.POL]),\n    [ChainKey.DAI]: new ethers.Contract('0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83', erc20_abi, provider[ChainKey.DAI])\n  },\n  [CoinKey.LINK]: {\n    [ChainKey.ETH]: new ethers.Contract('0x514910771af9ca656af840dff83e8264ecf986ca', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.BSC]: new ethers.Contract('0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.POL]: new ethers.Contract('0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39', erc20_abi, provider[ChainKey.POL]),\n    [ChainKey.DAI]: new ethers.Contract('0xE2e73A1c69ecF83F464EFCE6A5be353a37cA09b2', erc20_abi, provider[ChainKey.DAI])\n  },\n  [CoinKey.UNI]: {\n    [ChainKey.ETH]: new ethers.Contract('0x1f9840a85d5af5bf1d1762f925bdaddc4201f984', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.BSC]: new ethers.Contract('0xbf5140a22578168fd562dccf235e5d43a02ce9b1', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.POL]: new ethers.Contract('0xb33EaAd8d922B1083446DC23f610c2567fB5180f', erc20_abi, provider[ChainKey.POL]),\n    [ChainKey.DAI]: new ethers.Contract('0x4537e328Bf7e4eFA29D05CAeA260D7fE26af9D74', erc20_abi, provider[ChainKey.DAI])\n  },\n  [CoinKey.AAVE]: {\n    [ChainKey.ETH]: new ethers.Contract('0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', erc20_abi, provider[ChainKey.ETH]),\n    [ChainKey.BSC]: new ethers.Contract('0xfb6115445bff7b52feb98650c87f44907e58f802', erc20_abi, provider[ChainKey.BSC]),\n    [ChainKey.POL]: new ethers.Contract('0xd6df932a45c0f255f85145f286ea0b292b21c90b', erc20_abi, provider[ChainKey.POL]),\n    [ChainKey.DAI]: new ethers.Contract('0xDF613aF6B44a31299E48131e9347F034347E2F00', erc20_abi, provider[ChainKey.DAI])\n  },\n\n}\n\nfunction getListOfSupportedTokens() {\n  return Object.keys(availableTokens)\n}\n\nasync function getTokenBalance(coinKey: CoinKey, walletAdress: string) {\n  if (!getListOfSupportedTokens().includes(coinKey)) {\n    console.error(`CoinKey ${coinKey} is not supported`)\n    return null\n  }\n\n  var balanceAcrossChains: { [k: string]: number } = {}\n\n  // get native/base chain token balance\n  if(nativeTokenMapping.hasOwnProperty(coinKey)){\n    const nativeChain = nativeTokenMapping[coinKey].nativeChain\n    if (nativeChain) {\n      const nativeBalance = await provider[nativeChain].getBalance(walletAdress)\n      balanceAcrossChains[nativeChain] = parseFloat(ethers.utils.formatEther(nativeBalance))\n    }\n  }\n  \n  // get token on other chains\n  const chains = availableTokens[coinKey];\n  for (const [chain, contract] of Object.entries(chains)) {\n    const externalBalance = await contract.balanceOf(walletAdress);\n    balanceAcrossChains[chain] = parseFloat(ethers.utils.formatEther(externalBalance))\n  }\n\n  return balanceAcrossChains\n}\n\nasync function getTokenBalanceFor(coinKeys: Array<CoinKey>, walletAdress: string) {\n  var balances: { [k: string]: object } = {}\n  for (const coinKey of coinKeys) {\n    balances[coinKey] = getTokenBalance(coinKey, walletAdress)\n  }\n\n  return balances\n}\n\n\n\n\nexport { getTokenBalance, getTokenBalanceFor, getListOfSupportedTokens };\n\n","import axios from 'axios'\nimport {CoinKey } from '../types';\n\nconst CoinGeckoIds = {\n  [CoinKey.ETH]: \"ethereum\",\n  [CoinKey.BNB]: \"binancecoin\",\n  [CoinKey.MATIC]: \"matic-network\",\n  [CoinKey.DAI]: \"dai\",\n  [CoinKey.USDT]: 'tether',\n  [CoinKey.USDC]: 'usd-coin',\n  [CoinKey.UNI]: 'uniswap',\n  [CoinKey.LINK]: 'chainlink',\n  [CoinKey.AAVE]: 'aave',\n}\n\nasync function getPricesForTokens(coinKeys: Array<CoinKey>){\n\n  //build string for Url\n  var idString: string = \"\"\n  for (const coin of coinKeys){\n    idString += `${CoinGeckoIds[coin]},`\n  }\n\n  // get data from coingecko\n  const coingeckoURL = `https://api.coingecko.com/api/v3/simple/price?ids=${idString}&vs_currencies=usd%2Ceur}`\n  var result;\n  try{\n    result = await axios.get(coingeckoURL);\n  } catch (e){\n    console.warn(\"Coingecko api call failed with status \" + e)\n    console.warn(e)\n    return null\n  }\n\n  // response body is empty?\n  if (Object.keys(result.data).length === 0){\n    return null;\n  }\n\n  // build return object\n  var prices: {[k: string]: object} = {}\n  for (const coin of coinKeys){\n    prices[coin] = result.data[CoinGeckoIds[coin]] \n  }\n  console.log(prices);\n\n  // return prices\n  return prices\n\n  \n\n}\n\nexport {getPricesForTokens}\n","import { ChainKey, Wallet, WalletKey } from '../types';\n\nconst isSupported = () => {\n  try {\n    var itemBackup = localStorage.getItem(\"\");\n    localStorage.removeItem(\"\");\n    if (itemBackup === null)\n      localStorage.removeItem(\"\");\n    else\n      localStorage.setItem(\"\", itemBackup);\n    return true;\n  }\n  catch (e) {\n    return false;\n  }\n}\n\nconst storeWallets = (wallets: Array<Wallet>) => {\n  if (isSupported()) {\n    localStorage.setItem('wallets', JSON.stringify(wallets.map(item => item.address)))\n  }\n}\n\nconst readWallets = (): Array<Wallet> => {\n  if (!isSupported()) {\n    return []\n  }\n  \n  const walletsString = localStorage.getItem('wallets')\n  if (walletsString) {\n    try {\n      const addresses = JSON.parse(walletsString)\n      const walletKeys = Object.values(WalletKey)\n      let walletIndex = 0\n\n      return addresses.map((address: string) => {\n        return {\n          key: walletKeys[walletIndex++],\n          name: 'My Wallet',\n          address: address,\n          chains: Object.values(ChainKey),\n          loading: false,\n        }\n      })\n    }\n    catch (e) {\n      return []\n    }\n  } else {\n    return []\n  }\n}\n\n\n\nexport { isSupported, storeWallets, readWallets }\n","import { InjectedConnector } from '@web3-react/injected-connector';\nimport { NetworkConnector } from '@web3-react/network-connector';\n\nconst CHAINS = {\n  MAINNET: 1,\n  ROPSTEN: 3,\n  RINKEBY: 4,\n  KOVAN: 42,\n  \n  BSC: 56,\n  // BSC_TESTNET: 97,\n\n  POLYGON: 137,\n  MUMBAI: 80001,\n\n  XDAI: 100,\n};\n\nconst RPC_URLS: { [chainId: number]: string } = {\n  [CHAINS.MAINNET]: process.env.REACT_APP_RPC_URL_MAINNET as string,\n  [CHAINS.ROPSTEN]: process.env.REACT_APP_RPC_URL_ROPSTEN as string,\n  [CHAINS.RINKEBY]: process.env.REACT_APP_RPC_URL_RINKEBY as string,\n  [CHAINS.KOVAN]: process.env.REACT_APP_RPC_URL_KOVAN as string,\n  \n  [CHAINS.BSC]: process.env.REACT_APP_RPC_URL_BSC as string,\n  // [CHAINS.BSC_TESTNET]: process.env.REACT_APP_RPC_URL_BSC_TESTNET as string,\n  \n  [CHAINS.POLYGON]: process.env.REACT_APP_RPC_URL_POLYGON_MAINNET as string,\n  [CHAINS.MUMBAI]: process.env.REACT_APP_RPC_URL_POLYGON_MUMBAI as string,\n\n  [CHAINS.XDAI]: process.env.REACT_APP_RPC_URL_XDAI as string,\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: Object.values<number>(CHAINS),\n});\n\nexport const network = new NetworkConnector({\n  urls: Object.fromEntries(\n    Object.values<number>(CHAINS).map(i => [i, RPC_URLS[i]])\n  ),\n  defaultChainId: CHAINS.MAINNET,\n});\n","import { useWeb3React } from '@web3-react/core';\nimport { Button } from 'antd';\nimport React from 'react';\n\nimport { injected } from './connectors';\n\nfunction ConnectButton() {\n  const { activate } = useWeb3React();\n\n\n  return (\n    <Button style={{ display: 'block' }} onClick={() => activate(injected)}>\n      Connect with MetaMask\n    </Button>\n  );\n}\n\nexport default ConnectButton;\n","import { DeleteOutlined, FrownTwoTone, SmileTwoTone, SyncOutlined, WalletOutlined } from '@ant-design/icons';\nimport { ApolloClient, gql, InMemoryCache } from '@apollo/client';\nimport { Paywall } from '@unlock-protocol/paywall';\nimport { useWeb3React } from '@web3-react/core';\nimport \"animate.css\";\nimport { Avatar, Badge, Button, Col, Input, Modal, notification, Row, Skeleton, Table, Tooltip } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport { BytesLike, ethers } from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport { getTokenBalance } from '../services/balanceService';\nimport {getPricesForTokens} from '../services/PriceService'\nimport { readWallets, storeWallets } from '../services/localStorage';\nimport { Amounts, ChainKey, Coin, CoinKey, ColomnType, DataType, NetworkConfigs, Summary, Wallet, WalletAmounts, WalletKey } from '../types';\nimport './Dashboard.css';\nimport ConnectButton from './web3/ConnectButton';\n\nconst UNLOCK_PREMIUM_LOCK_CONTRACT : BytesLike = '0x791E3D208ED611837bb84a632bC801DF2639eB0E';\nconst network = 'rinkeby';\nconst GRAPH_ENDPOINTS = {\n  mainnet: 'https://api.thegraph.com/subgraphs/name/unlock-protocol/unlock',\n  rinkeby: 'https://api.thegraph.com/subgraphs/name/unlock-protocol/unlock-rinkeby',\n};\n// const GRAPH_EXPLORER_ENDPOINTS = {\n//   mainnet: 'https://thegraph.com/explorer/subgraph/unlock-protocol/unlock',\n//   rinkeby: 'https://thegraph.com/explorer/subgraph/unlock-protocol/unlock-rinkeby',\n// };\nconst ETHERSCAN_URLS = {\n  mainnet: 'https://etherscan.io',\n  rinkeby: 'https://rinkeby.etherscan.io',\n};\n\nconst GRAPH_ENPOINT = GRAPH_ENDPOINTS[network]\n// const GRAPH_EXPLORER = GRAPH_EXPLORER_ENDPOINTS[network]\nconst ETHERSCAN_URL = ETHERSCAN_URLS[network]\n\nconst GRAPH_CLIENT = new ApolloClient({\n  uri: GRAPH_ENPOINT,\n  cache: new InMemoryCache()\n});\n\n(window as any).unlockProtocolConfig = {\n  network: 4, // Network ID (1 is for mainnet, 4 for rinkeby... etc)\n  locks: {\n    '0x791E3D208ED611837bb84a632bC801DF2639eB0E': { // 0xabc is the address of a lock.\n      name: 'One Year Premium Rinkeby',\n      network: 4 // you can customize the network for each lock\n    },\n    '0x791E3D208ED611837bb84a632bC801DF2639eB02': { // 0xabc is the address of a lock.\n      name: 'One Year Premium',\n      network: 1 // you can customize the network for each lock\n    },\n  },\n  icon: 'https://app.unlock-protocol.com/static/images/svg/default.svg',\n  callToAction: {\n    default: 'This content is locked. Pay with cryptocurrency to access it!',\n    expired: 'This is what is shown when the user had a key which is now expired',\n    pending: 'This is the message shown when the user sent a transaction to purchase a key which has not be confirmed yet',\n    confirmed: 'This is the message shown when the user has a confirmed key',\n    noWallet: 'This is the message shown when the user does not have a crypto wallet which is required...',\n  }\n}\n\n// Configure networks to use\nconst networkConfigs: NetworkConfigs = {\n  1: {\n    readOnlyProvider: 'https://eth-mainnet.alchemyapi.io/v2/b7Mxclz5hGyHqoeodGLQ17F5Qi97S7xJ',\n    locksmithUri: 'https://locksmith.unlock-protocol.com',\n    unlockAppUrl: 'https://app.unlock-protocol.com',\n  },\n  4: {\n    readOnlyProvider: 'https://eth-rinkeby.alchemyapi.io/v2/n0NXRSZ9olpkJUPDLBC00Es75jaqysyT',\n    locksmithUri: 'https://rinkeby.locksmith.unlock-protocol.com',\n    unlockAppUrl: 'https://app.unlock-protocol.com',\n  },\n  100: {\n    readOnlyProvider: 'https://rpc.xdaichain.com/',\n    locksmithUri: 'https://locksmith.unlock-protocol.com',\n    unlockAppUrl: 'https://app.unlock-protocol.com',\n  },\n}\n\n// You may actually want to put that in a context.., at the top of the application\nconst PAYWALL = new Paywall((window as any).unlockProtocolConfig, networkConfigs)\n\nconst MAX_AMOUNT_FREE_WALLETS = 1;\n\nconst ChainDetails = {\n  [ChainKey.ETH]: {\n    name: 'Ethereum',\n    gasName: CoinKey.ETH,\n  },\n  [ChainKey.BSC]: {\n    name: 'Binance Smart Chain',\n    gasName: CoinKey.BNB,\n  },\n  [ChainKey.POL]: {\n    name: 'Polygon',\n    gasName: CoinKey.MATIC,\n  },\n  [ChainKey.DAI]: {\n    name: 'xDai',\n    gasName: CoinKey.DAI,\n  },\n}\n\nconst coins : Array<Coin> = [\n  {\n    key: CoinKey.ETH,\n    name: CoinKey.ETH,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0x0000000000000000000000000000000000000000.png',\n  },\n  {\n    key: CoinKey.MATIC,\n    name: CoinKey.MATIC,\n    img_url: 'https://zapper.fi/images/networks/polygon/0x0000000000000000000000000000000000000000.png',\n  },\n  {\n    key: CoinKey.BNB,\n    name: CoinKey.BNB,\n    img_url: 'https://zapper.fi/images/networks/binance-smart-chain/0x0000000000000000000000000000000000000000.png',\n  },\n  {\n    key: CoinKey.DAI,\n    name: CoinKey.DAI,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0x6b175474e89094c44da98b954eedeac495271d0f.png',\n  },\n  {\n    key: CoinKey.USDT,\n    name: CoinKey.USDT,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0xdac17f958d2ee523a2206206994597c13d831ec7.png',\n  },\n  {\n    key: CoinKey.USDC,\n    name: CoinKey.USDC,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48.png',\n  },\n  {\n    key: CoinKey.LINK,\n    name: CoinKey.LINK,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0x514910771af9ca656af840dff83e8264ecf986ca.png',\n  },\n  {\n    key: CoinKey.UNI,\n    name: CoinKey.UNI,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0x1f9840a85d5af5bf1d1762f925bdaddc4201f984.png',\n  },\n  {\n    key: CoinKey.AAVE,\n    name: CoinKey.AAVE,\n    img_url: 'https://zapper.fi/images/networks/ethereum/0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9.png',\n  },\n\n]\n\n// modals\nconst showGasModal = (gas: ChainKey) => {\n  switch (gas) {\n    case ChainKey.ETH:\n      Modal.info({\n        title: 'Gas Info for ethereum chain',\n        content: (\n          <div>\n            You need to buy ETH.\n          </div>\n        )\n      })\n      break;\n    case ChainKey.POL:\n      Modal.info({\n        title: 'Gas Info for Polygon/Matic chain',\n        content: (\n          <div>\n            You need to buy MATIC.\n          </div>\n        )\n      })\n      break;\n    case ChainKey.BSC:\n      Modal.info({\n        title: 'Gas Info for Binance Smart Chain',\n        content: (\n          <div>\n            You need to buy BNB.\n          </div>\n        )\n      })\n      break;\n    case ChainKey.DAI:\n      Modal.info({\n        title: 'Gas Info for xDAI chain',\n        content: (\n          <div>\n            You can get some free DAI using those faucets. It should be enough to exchange or move your funds.\n            <ul>\n              <li><a href=\"https://xdai-app.herokuapp.com/faucet\" target=\"_blank\" rel=\"nofollow noreferrer\">https://xdai-app.herokuapp.com/faucet</a></li>\n              <li><a href=\"https://blockscout.com/xdai/mainnet/faucet\" target=\"_blank\" rel=\"nofollow noreferrer\">https://blockscout.com/xdai/mainnet/faucet</a></li>\n            </ul>\n          </div>\n        )\n      })\n      break;\n  }\n}\n\n// render formatters\nfunction renderGas(data: Array<DataType>, walletKey: WalletKey, chain: ChainKey, coinName: string) {\n  const coin = data.find(coin => coin.coin.name === coinName)\n  const wallet = coin && coin[walletKey]\n  const amounts = wallet ? wallet[chain] : { amount_coin: 0 }\n\n  const tooltipsEmpty = {\n    [ChainKey.ETH]: (<>The Ethereum chain requires ETH to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.ETH)}>Get ETH</Button></>),\n    [ChainKey.POL]: (<>The Polygon/Matic chain requires MATIC to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.POL)}>Get MATIC</Button></>),\n    [ChainKey.BSC]: (<>The Binance Smart Chain requires BNB to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.BSC)}>Get BNB</Button></>),\n    [ChainKey.DAI]: (<>The xDAI chain requires DAI to pay for gas. Without it you won't be able to do anything on this chain. <Button type=\"link\" block onClick={() => showGasModal(ChainKey.DAI)}>Get DAI</Button></>),\n  }\n  const tooltipEmpty = tooltipsEmpty[chain];\n  const tooltips = {\n    [ChainKey.ETH]: (<>The Ethereum chain requires ETH to pay for gas.</>),\n    [ChainKey.POL]: (<>The Polygon/Matic chain requires MATIC to pay for gas.</>),\n    [ChainKey.BSC]: (<>The Binance Smart Chain requires BNB to pay for gas.</>),\n    [ChainKey.DAI]: (<>The xDAI chain requires DAI to pay for gas.</>),\n  }\n  const tooltip = tooltips[chain];\n  return (\n    <div className=\"gas\">\n      <div className=\"amount_coin\">\n        { amounts.amount_coin === -1 ? (\n          <Tooltip title={tooltip}>\n          {coinName}: <Skeleton.Button style={{ width: 60}} active={true} size={'small'} shape={'round'} />\n        </Tooltip>\n        ) : amounts.amount_coin === 0 ? (\n          <Tooltip color=\"red\" title={tooltipEmpty}>\n            {coinName}: -\n            <Badge size=\"small\" count={'!'} offset={[5, -15]}/>\n          </Tooltip>\n        ) : (\n          <Tooltip title={tooltip}>\n            {coinName}: {amounts.amount_coin.toLocaleString(undefined, { minimumFractionDigits: 4, maximumFractionDigits: 4 })}\n          </Tooltip>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction renderAmounts(amounts: Amounts) {\n  if (amounts.amount_coin === -1) {\n    // loading\n    return (\n      <div className=\"amounts\">\n        <div className=\"amount_coin\">\n          <Skeleton.Button style={{ width: 70}} active={true} size={'small'} shape={'round'} />\n        </div>\n        <div className=\"amount_usd\">\n          <Skeleton.Button style={{ width: 60, height: 18}} active={true} size={'small'} shape={'round'} />\n        </div>\n      </div>\n    )\n  } else if (amounts.amount_coin === 0) {\n    // empty\n    return (\n      <div className=\"amounts amounts-empty\">\n        <div className=\"amount_coin\">00.0000</div>\n        <div className=\"amount_usd\">00.00</div>\n      </div>\n    )\n  } else {\n    // default\n    return (\n      <div className={'amounts' + (amounts.amount_coin === 0 ? ' amounts-empty' : '') }>\n        <div className=\"amount_coin\">{amounts.amount_coin.toLocaleString(undefined, { minimumFractionDigits: 4, maximumFractionDigits: 4 })}</div>\n        <div className=\"amount_usd\">{amounts.amount_usd.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} USD</div>\n      </div>\n    )\n  }\n}\n\nfunction renderSummary(summary: any) {\n  return (\n    <div className=\"amounts\">\n      <div className=\"amount_coin\">{summary.amount_usd.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} USD</div>\n      <div className=\"amount_usd\">{summary.percentage_of_portfolio.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} % of portfolio</div>\n    </div>\n  )\n}\n\nfunction renderCoin(coin: Coin) {\n  return (\n    <div className=\"coin\">\n      <Avatar\n        src={coin.img_url}\n        alt={coin.name}\n      />\n    </div>\n  )\n}\n\n// builders\nconst buildDataRow = (coin: any) : DataType => {\n  const emptyWalletAmounts : WalletAmounts = {\n    [ChainKey.ETH]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [ChainKey.BSC]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [ChainKey.POL]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [ChainKey.DAI]: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n  }\n\n  const row = {\n    key: coin.key,\n    coin: coin,\n    portfolio: {\n      amount_coin: -1,\n      amount_usd: -1,\n    },\n    [WalletKey.WALLET1]: deepClone(emptyWalletAmounts),\n    [WalletKey.WALLET2]: deepClone(emptyWalletAmounts),\n    [WalletKey.WALLET3]: deepClone(emptyWalletAmounts),\n    [WalletKey.WALLET4]: deepClone(emptyWalletAmounts),\n  }\n\n  return row\n}\n\nconst buildDataRows = (coins: Array<any>) : Array<DataType> => {\n  return coins.map(coin => buildDataRow(coin))\n}\n\n// columns\nconst baseWidth = 150;\nconst coinColumn : ColomnType = {\n  title: 'Coins',\n  fixed: 'left',\n  dataIndex: 'coin',\n  render: renderCoin,\n  width: 60,\n}\nconst portfolioColumn : ColomnType = {\n  title: 'Portfolio',\n  width: baseWidth + 10,\n  dataIndex: 'portfolio',\n  render: renderAmounts,\n}\nconst addColumn : ColomnType = {\n  title: (\n    <Button>\n      Add Wallet\n    </Button>\n  ),\n  dataIndex: '',\n  width: 100,\n}\nconst walletColumn: ColomnType = {\n  title: 'No Wallet Connected',\n  children: [\n    {\n      title: 'Ethereum',\n      children: [{\n        title: CoinKey.ETH,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }]\n    },\n    {\n      title: 'Polygon',\n      children: [{\n        title: CoinKey.MATIC,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }],\n    },\n    {\n      title: 'Binance Smart Chain',\n      children: [{\n        title: CoinKey.BNB,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }],\n    },\n    {\n      title: 'xDai',\n      children: [{\n        title: CoinKey.DAI,\n        dataIndex: [WalletKey.WALLET1, ChainKey.ETH],\n        width: baseWidth,\n        render: renderAmounts,\n      }],\n    },\n  ],\n}\nconst baseColumns = [\n  coinColumn,\n  portfolioColumn,\n  walletColumn,\n  addColumn,\n]\n\nconst emptySummaryAmounts = {\n  amount_usd: 0,\n  percentage_of_portfolio: 0,\n}\nconst emptySummaryWallet = {\n  [ChainKey.ETH]: emptySummaryAmounts,\n  [ChainKey.BSC]: emptySummaryAmounts,\n  [ChainKey.POL]: emptySummaryAmounts,\n  [ChainKey.DAI]: emptySummaryAmounts,\n}\nconst emptySummary : Summary = {\n  portfolio: {\n    amount_usd: 0,\n    percentage_of_portfolio: 100,\n  },\n  [WalletKey.WALLET1]: emptySummaryWallet,\n  [WalletKey.WALLET2]: emptySummaryWallet,\n  [WalletKey.WALLET3]: emptySummaryWallet,\n  [WalletKey.WALLET4]: emptySummaryWallet,\n}\n\nfunction deepClone(obj : any) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nfunction Dashboard() {\n\n  const LOCKED = 'locked'\n  const UNLOCKED = 'unlocked'\n\n  const [data, setData] = useState<Array<DataType>>(buildDataRows(coins));\n  const [columns, setColumns] = useState<Array<ColomnType>>(baseColumns)\n  const [summary, setSummary] = useState<Summary>(deepClone(emptySummary))\n  const [wallets, setWallets] = useState<Array<Wallet>>([])\n  const [prices, setPrices] = useState<any>(null);\n  const [walletModalVisible, setWalletModalVisible] = useState(false);\n  const [walletModalAddress, setWalletModalAddress] = useState('');\n  const [walletModalLoading, setWalletModalLoading] = useState<boolean>(false)\n  const [premiumUnlocked, setPremiumUnlocked] = useState(LOCKED)\n\n  const web3 = useWeb3React()\n\n  const calculatePortfolio = (coin : DataType) => {\n    // sum portfolio\n    coin.portfolio.amount_coin = 0;\n    coin.portfolio.amount_usd = 0;\n    Object.values(WalletKey).forEach((walletKey : WalletKey) => {\n      Object.values(ChainKey).forEach((chainKey: ChainKey) => {\n        if (coin[walletKey][chainKey].amount_coin > 0) {\n          coin.portfolio.amount_coin += coin[walletKey][chainKey].amount_coin;\n          coin.portfolio.amount_usd += coin[walletKey][chainKey].amount_usd;\n        }\n      })\n    })\n  }\n\n  const clearWalletData = (walletKey : WalletKey) => {\n    setData(data.map(coin => {\n      Object.values(ChainKey).forEach(chain => {\n        coin[walletKey][chain].amount_coin = -1\n        coin[walletKey][chain].amount_usd = -1\n      })\n      \n      calculatePortfolio(coin)\n      return coin\n    }))\n  }\n\n  const updateAmounts = (walletKey : WalletKey, coinKey: string, amounts : any) => {\n    setData(data.map(coin => {\n      if (coin.key === coinKey && coin[walletKey]) {\n        coin[walletKey].eth.amount_coin = amounts.eth;\n        coin[walletKey].eth.amount_usd = amounts.eth; // debug\n        coin[walletKey].bsc.amount_coin = amounts.bsc;\n        coin[walletKey].bsc.amount_usd = amounts.bsc; // debug\n        coin[walletKey].pol.amount_coin = amounts.pol;\n        coin[walletKey].pol.amount_usd = amounts.pol; // debug\n        coin[walletKey].dai.amount_coin = amounts.dai;\n        coin[walletKey].dai.amount_usd = amounts.dai; // debug\n\n        calculatePortfolio(coin)\n      }\n      return coin\n    }))\n  }\n\n  const updateWalletAmounts = (wallet: Wallet) => {\n    Object.values(CoinKey).forEach(coin => {\n      getTokenBalance(coin, wallet.address)\n      .then((amounts : any) => {\n        updateAmounts(wallet.key, coin, amounts)\n      })\n    })\n  }\n\n  const removeWallet = (wallet : Wallet) => {\n    const newWallets = wallets.filter(item => item.key !== wallet.key)\n    storeWallets(newWallets)\n    setWallets(newWallets)\n    clearWalletData(wallet.key)\n  }\n\n  const triggerWalletUpdate = (wallet : Wallet) => {\n    clearWalletData(wallet.key)\n\n    setWallets(wallets.map((item : Wallet) => {\n      if (item.key === wallet.key) {\n        item.loading = false\n      }\n      return item\n    }))\n  }\n\n  const findUnusedWalletKey = () : WalletKey => {\n    for (const key of Object.values(WalletKey)) {\n      if (!wallets.find((item : Wallet) => item.key === key)) {\n        return key\n      }\n    }\n    throw new Error('No more keys available')\n  }\n\n  const addWallet = (address : string) => {\n    const wallet : Wallet = {\n      key: findUnusedWalletKey(),\n      name: 'My Wallet',\n      address: address,\n      chains: Object.values(ChainKey),\n      loading: false,\n    }\n    const newWallets = [...wallets, wallet]\n    storeWallets(newWallets)\n    setWallets(newWallets)\n  }\n\n  const showWalletModal = () => {\n    if(checkPremium() === false){\n      return;\n    }\n    setWalletModalVisible(true);\n  };\n\n  const getModalAddressSuggestion = () => {\n    const addedWallets = wallets.map(wallet => wallet.address)\n    const web3Account = (web3.account && addedWallets.indexOf(web3.account) === -1) ? web3.account : ''\n    return walletModalAddress || web3Account;\n  }\n\n  const resolveEnsName = async (name : string) => {\n    const ethereum = new ethers.providers.JsonRpcProvider(process.env.REACT_APP_RPC_URL_MAINNET)\n    return ethereum.resolveName(name)\n  }\n  const handleWalletModalAdd = async () => {\n    setWalletModalLoading(true);\n    let address = getModalAddressSuggestion();\n\n    if (address.endsWith('.eth')) {\n      address = await resolveEnsName(address) || ''\n    }\n\n    if (ethers.utils.isAddress(address)) {\n      addWallet(address)\n      setWalletModalVisible(false)\n      setWalletModalAddress('')\n    }\n    setWalletModalLoading(false);\n  };\n\n  const handleWalletModalClose = () => {\n    if (wallets.length) {\n      setWalletModalVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    getLastUnlockPurchases()\n    \n  }, [])\n\n  const getLastUnlockPurchases = () => {\n    const UNLOCK_DATA = gql`\n    query($unlockContract:String,  $olderThan: String){\n      locks(where:{address:$unlockContract}) {\n        keys(where:{createdAt_lte:$olderThan}) {\n          createdAt\n        }\n      }\n    }\n    `\n    const oneDayAgo = (Date.now() - (60*60*24)).toString()\n    GRAPH_CLIENT.query({\n      query: UNLOCK_DATA,\n      variables: {\n        unlockContract: UNLOCK_PREMIUM_LOCK_CONTRACT,\n        olderThan: oneDayAgo,\n      },\n    }).then(result => {\n      const etherscan = ETHERSCAN_URL + '/address/' + UNLOCK_PREMIUM_LOCK_CONTRACT\n      const amountKeys = result.data.locks[0].keys.length\n      notification.open({\n        message: 'New premium users!',\n        description: (\n          <p>\n            {amountKeys} people just upgraded their account to premium using <a target=\"_blank\" rel=\"nofollow noreferrer\" href=\"http://unlock-protocol.com/\">Unlock</a>.\n            Check on <a target=\"_blank\" rel=\"nofollow noreferrer\" href={etherscan}>Etherscan</a>\n          </p>\n        ),\n        placement: 'bottomRight',\n        duration: 10000000,\n      });\n    })\n  }\n\n  // Automatically trigger update\n  useEffect(() => {\n\n    // @ts-expect-error\n    if(PAYWALL && PAYWALL.lockStatus){\n      // @ts-expect-error\n      setPremiumUnlocked(PAYWALL.lockStatus)\n    }\n\n    window.addEventListener('unlockProtocol.authenticated', function(e : any) {\n      // event.detail.addresss includes the address of the current user, when known\n      console.log(\"authenticated event\", e)\n    })\n\n    window.addEventListener('unlockProtocol.transactionSent', function(e : any) {\n      // event.detail.hash includes the hash of the transaction sent\n      console.log(\"transaction sent event\", e)\n    })\n\n    window.addEventListener('unlockProtocol.status', function(e : any) {\n      const state = e.detail.state\n      if(premiumUnlocked === LOCKED && state === UNLOCKED){\n        console.log(\"CHANGED FROM LOCKED TO UNLOCKED\")\n        setPremiumUnlocked(state)\n        // setWalletModalVisible(true); // do not trigger on every page load\n      }\n\n      console.log(\"status changed event\", e)\n      // the state is a string whose value can either be 'unlocked' or 'locked'...\n      // If state is 'unlocked': implement code here which will be triggered when\n      // the current visitor has a valid lock key\n      // If state is 'locked': implement code here which will be\n      // triggered when the current visitor does not have a valid lock key\n    })\n\n    let changed = false\n    const newWallets = wallets.map((wallet) => {\n      if (!wallet.loading) {\n        // trigger update if wallet is not already loading/loaded\n        wallet.loading = true\n        changed = true\n        updateWalletAmounts(wallet)\n      }\n      return wallet\n    })\n\n    // only update wallets if at least one update was triggered\n    if (changed) {\n      setWallets(newWallets)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wallets, data])\n\n  const buildWalletColumn = (data: Array<DataType>, wallet : Wallet) => {\n    const children : Array<ColomnType> = wallet.chains.map(chainKey => {\n      return {\n        title: ChainDetails[chainKey].name,\n        children: [{\n          title: renderGas(data, wallet.key, chainKey, ChainDetails[chainKey].gasName),\n          dataIndex: [wallet.key, chainKey],\n          width: baseWidth,\n          render: renderAmounts,\n        }]\n      }\n    })\n  \n    return {\n      title: (\n        <Row>\n          <Col span={12} offset={6}>\n            {`\"${wallet.name}\" ${wallet.address.substr(0,4)}...${wallet.address.substr(-4,4)}`}\n          </Col>\n          <Col span={1} offset={4}>\n            <SyncOutlined onClick={() => triggerWalletUpdate(wallet)} />\n          </Col>\n          <Col span={1} offset={0}>\n            <DeleteOutlined onClick={() => removeWallet(wallet)} />\n          </Col>\n  \n          \n        </Row>\n      ),\n      children\n    }\n  }\n\n  const callCheckoutModal = () => {\n    // @ts-expect-error\n    if (PAYWALL && PAYWALL.loadCheckoutModal) {\n      // @ts-expect-error\n      PAYWALL.loadCheckoutModal()\n    } else{\n      console.log(\"There's no unlockProtocol\")\n    }\n  }\n\n  const checkPremium = () => {\n    if (premiumUnlocked === LOCKED && wallets.length >= MAX_AMOUNT_FREE_WALLETS) {\n      callCheckoutModal()\n      return false;\n    }\n    return true;\n  }\n\n  // keep columns in sync\n  useEffect(() => {\n    const addColumn = {\n      title: (\n        <>\n        <div>\n          PREMIUM: { premiumUnlocked === UNLOCKED ? <SmileTwoTone /> : <FrownTwoTone /> }\n        </div>\n          \n          <Button onClick={showWalletModal}>\n            Add Wallet\n          </Button>\n        </>\n      ),\n      dataIndex: '',\n      width: 100,\n    }\n    const walletColumns = wallets.length ? wallets.map(wallet => buildWalletColumn(data, wallet)) : [walletColumn]\n    const columns = [\n      coinColumn,\n      portfolioColumn,\n      ...walletColumns,\n      addColumn,\n    ]\n    setColumns(columns)\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wallets, data])\n\n  // keep Summary in sync\n  useEffect(() => {\n    // sum for each chain in each wallet\n    const newSummary = data.reduce((summary : Summary, coin) => {\n      wallets.forEach((wallet: Wallet) => {\n        wallet.chains.forEach((chainName: ChainKey) => {\n          if (coin[wallet.key][chainName].amount_usd !== -1) {\n            summary[wallet.key][chainName].amount_usd += coin[wallet.key][chainName].amount_usd\n          }\n        })\n      })\n\n      return summary\n    }, deepClone(emptySummary))\n\n    // total sum\n    newSummary.portfolio.amount_usd = 0;\n    wallets.forEach((wallet: Wallet) => {\n      wallet.chains.forEach((chainKey: ChainKey) => {\n        newSummary.portfolio.amount_usd += newSummary[wallet.key][chainKey].amount_usd\n      })\n    })\n\n    // calculate percentages\n    wallets.forEach((wallet: Wallet) => {\n      wallet.chains.forEach((chainKey: ChainKey) => {\n        newSummary[wallet.key][chainKey].percentage_of_portfolio = newSummary[wallet.key][chainKey].amount_usd === 0\n          ? 0\n          : newSummary[wallet.key][chainKey].amount_usd / newSummary.portfolio.amount_usd * 100\n      })\n    })\n\n    // set new Summary\n    setSummary(newSummary)\n  }, [data, wallets])\n\n  // Setup\n  useEffect(() => {\n    if (!wallets.length && !walletModalVisible) {\n      // check localStorage\n      const storedWallets = readWallets()\n      if (storedWallets.length) {\n        setWallets(storedWallets)\n      } else {\n        setWalletModalVisible(true);\n      }\n    }\n  }, [wallets, walletModalVisible])\n\n  // get prices\n  useEffect(() => {\n    getPricesForTokens(Object.values(CoinKey))\n      .then(setPrices)\n  }, [])\n\n  // update data with prices\n  useEffect(() => {\n    if (prices) {    \n      let changed = false\n      const newData = data.map(coin => {\n        Object.values(WalletKey).forEach((walletKey : WalletKey) => {\n          Object.values(ChainKey).forEach(chain => {\n            if (coin[walletKey][chain].amount_coin > 0) {\n              const inUsd = prices[coin.key].usd * coin[walletKey][chain].amount_coin\n              if (inUsd !== coin[walletKey][chain].amount_usd) {\n                coin[walletKey][chain].amount_usd = inUsd\n                changed = true\n              }\n            }\n          })\n        })\n        calculatePortfolio(coin)\n        return coin\n      })\n\n      if (changed) {\n        setData(newData)\n      }\n    }\n  }, [data, prices])\n\n  let summaryIndex = 0\n  return (\n    <Content className=\"site-layout\">\n      <div className=\"site-layout-background\" style={{ minHeight: 'calc(100vh - 64px)' }}>\n        <Table\n          columns={columns}\n          dataSource={data}\n          bordered\n          size=\"middle\"\n          scroll={{ x: '1000px', y: 'calc(100vh - 277px)' }}\n          pagination={false}\n          summary={() => (\n            <Table.Summary fixed>\n              <Table.Summary.Row>\n                <Table.Summary.Cell index={summaryIndex}>SUM</Table.Summary.Cell>\n                <Table.Summary.Cell index={summaryIndex++}>{renderSummary(summary.portfolio)}</Table.Summary.Cell>\n                { wallets.map((wallet: Wallet) => wallet.chains.map((chainName: ChainKey) => (\n                  <Table.Summary.Cell index={summaryIndex++} key={wallet.key + chainName}>{renderSummary(summary[wallet.key][chainName])}</Table.Summary.Cell>\n                )))}\n                { wallets.length === 0 && Object.values(ChainKey).map(() => (\n                  <Table.Summary.Cell index={summaryIndex++} key={summaryIndex}></Table.Summary.Cell>\n                ))}\n                <Table.Summary.Cell index={summaryIndex++}></Table.Summary.Cell>\n              </Table.Summary.Row>\n            </Table.Summary>\n          )}\n        />\n      </div>\n\n      <Modal\n        title=\"Add Wallet\"\n        visible={walletModalVisible}\n        onOk={handleWalletModalAdd}\n        onCancel={handleWalletModalClose}\n        footer={[\n            // only show close if other wallets have been added already\n            wallets.length ? (\n              <Button key=\"back\" onClick={handleWalletModalClose}>\n                Close\n              </Button>\n            ) : '',\n            <Button key=\"submit\" type=\"primary\" onClick={handleWalletModalAdd} disabled={walletModalLoading}>\n              { walletModalLoading ? 'Loading' : 'Add' }\n            </Button>,\n        ]}\n      >\n        \n        { !web3.account ? (<ConnectButton />) : (<Button style={{ display: 'block' }}>Connected with {web3.account.substr(0, 4)}...</Button>)}\n        \n        Enter a wallet address / ens domain:\n        <Input \n          size=\"large\" \n          placeholder=\"0x...\" \n          prefix={<WalletOutlined />}\n          value={getModalAddressSuggestion()}\n          onChange={(event) => setWalletModalAddress(event.target.value)}\n          disabled={walletModalLoading}\n        />\n\n      </Modal>\n    </Content>\n  );\n}\n\nexport default Dashboard;\n","import { Web3Provider } from '@ethersproject/providers';\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect } from 'react';\n\nimport { useEagerConnect, useInactiveListener } from './hooks';\nimport { network } from './connectors';\n\nfunction Web3ConnectionManager({ children }: { children: JSX.Element }) {\n  const context = useWeb3React<Web3Provider>();\n  const { connector, activate, active } = context;\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  useEffect(() => {\n    if (triedEager && !active) {\n      activate(network);\n    }\n  }, [triedEager, active, connector, activate]);\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager);\n\n  return children;\n}\n\nexport default Web3ConnectionManager;\n","import { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\n\nimport { injected } from './connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { ethereum } = window as any; // TODO: Fix typing\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n","import { Web3Provider } from '@ethersproject/providers';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport React from 'react';\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nfunction WrappedWeb3ReactProvider({ children }: { children: JSX.Element }) {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>{children}</Web3ReactProvider>\n  );\n}\n\nexport default WrappedWeb3ReactProvider;\n","import React from 'react';\nimport logo from './assets/icon192.png';\nimport { Layout, Menu } from 'antd';\nimport { Header } from 'antd/lib/layout/layout';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Web3ConnectionManager from './components/web3/Web3ConnectionManager';\nimport WrappedWeb3ReactProvider from './components/web3/WrappedWeb3ReactProvider';\n\nfunction App() {\n  return (\n    <WrappedWeb3ReactProvider>\n      <Web3ConnectionManager>\n        <Layout>\n          <Header style={{ position: 'fixed', zIndex: 1, width: '100%', padding: 0 }}>\n            <img src={logo} className=\"logo\" alt={process.env.REACT_APP_PROJECT_NAME} />\n            <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"1\">Dashboard</Menu.Item>\n            </Menu>\n          </Header>\n\n          <Dashboard></Dashboard>\n\n          {/* <Footer style={{ textAlign: 'center' }}>©2021</Footer> */}\n        </Layout>\n      </Web3ConnectionManager>\n    </WrappedWeb3ReactProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './services/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}